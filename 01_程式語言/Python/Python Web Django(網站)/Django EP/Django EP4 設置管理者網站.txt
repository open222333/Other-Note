關於管理站訂製選擇的完整參考。
https://docs.djangoproject.com/en/2.0/ref/contrib/admin/
------------------概覽------------------
Django 管理應用程序可以使用您的模型，自動構建可用於創建，查看，更新和刪除記錄的網站區域。這可以在開發過程中，節省大量的時間，從而很容易測試您的模型，並了解您是否擁有正確的數據。根據網站的類型，管理應用程序也可用於管理生產中的數據。 Django 項目建議僅用於內部數據管理（即僅供管理員或組織內部人員使用），因為以模型為中心的方法，不一定是所有用戶最好的界面，並且暴露了大量不必要的關於模型的細節。

創建基礎項目時，自動完成所有的配置文件，包含您的網站中的管理應用程序在內（有關所需實際依賴關係的信息，如有需要請看 Django docs here)。其結果是，要將模型添加到管理應用程序，你必須做的，僅僅是註冊他們。在本文末尾，我們將簡要介紹，如何進一步配置管理區域，以更好地顯示我們的模型數據。

註冊模型後，我們將展示，如何創建一個新的 “超級用戶”，登錄到該網站，並創建一些書籍，作者，書籍實例和書籍類別。這些將有助於測試我們將在下一個教程中，開始創建的視圖和模板。
------------------指令------------------
python3 manage.py createsuperuser # 創建超級用戶(Creating a superuser)
python3 manage.py runserver  # 運行伺服器
------------------詳解------------------


位置：(/locallibrary/catalog/admin.py)
呼叫 admin.site.register 函式來註冊每個模型
ex：
    from .models import Author, Genre, Book, BookInstance

    admin.site.register(Book)
    admin.site.register(Author)
    admin.site.register(Genre)
    admin.site.register(BookInstance)
    
這是註冊模型最簡單的方式。而管理站則是高度用戶化的，我們會在接下來繼續說明其它註冊你的模型的方式。
------------------詳解------------------
進階組態(Advanced configuration)
    列表視圖(List views)：
        為每一筆紀錄增加額外的字段/資訊陳列。
        為這些紀錄列表增加篩選器(例如：使用日期、使用狀態進行過濾)
        為動作選單(action menu)添加額外的動作，並選擇是否要讓此選單在表格中呈現。
    細節視圖(Detail views)：
        選擇那些字段要隨著「順序、分組、可否編輯、是否被模組使用、取向」而陳列(或排除)。
        添加相關的字段來允許內聯編輯(inline editing)(例如：添加一個功能讓你可以在新增一個作者的時候也順便能夠新增或編輯他的書本記錄)。

註冊一個 模型管理 類別 (ModelAdmin class)
    為了要改變模型在管理站的陳列方式，你需要定義一個模型管理(ModelAdmin)類別 (他是用來描述排版的)，並且將它與其他模型一起註冊。
    
位置：(/locallibrary/catalog/admin.py)

配置列表視圖(Configure list views)
    列表展示 (list_display)：為視圖添加額外的字段。被展示出來的字段名稱會被以需要的排序宣告為元組(tuple)形式。
    語法範例：
        list_display = ('last_name', 'first_name', 'date_of_birth', 'date_of_death')
    -------------------------------------------
    列表過濾器 (List Filter)：列表過濾器可以幫助你過濾想顯示的記錄。
    語法範例：
        list_filter = ('status', 'due_back')
    -------------------------------------------
    fields：按順序列出了要在表單上顯示的那些欄位。默認情況下，字段是垂直顯示的，將它們分組到一個元組中，它們將水平顯示。
    語法範例：
        fields = ['first_name', 'last_name', ('date_of_birth', 'date_of_death')]
    -------------------------------------------
    fieldsets：將詳細信息表格內的相關模型信息分組。
    語法範例：
        fieldsets = (
            (None, {
                'fields': ('book', 'imprint', 'id')
            }),
            ('Availability', {
                'fields': ('status', 'due_back')
            }),
        )
    -------------------------------------------
    inlines：添加關聯的記錄
    語法範例：
        class BooksInstanceInline(admin.TabularInline):
            model = BookInstance

        @admin.register(Book)
        class BookAdmin(admin.ModelAdmin):
            list_display = ('title', 'author', 'display_genre')
            inlines = [BooksInstanceInline]